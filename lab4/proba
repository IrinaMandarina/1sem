import pygame
from pygame.draw import *
from random import randint

pygame.init()

FPS = 20
screen = pygame.display.set_mode((600, 450))

pygame.display.update()
clock = pygame.time.Clock()
finished = False
k = 0  # score counter
balls = []  # list of coordinates and other characteristics of usual balls
timer = 0  # 'time' of the game


class Ball:
    def __init__(self, x, y, r, color, dx, dy, lifetime, click, screen):
        self.x = x
        self.y = y
        self.r = r
        self.color = color
        self.dx = dx
        self.dy = dy
        self.lifetime = lifetime
        self.click = click
        self.screen = screen

    def new_ball(self):
        """
        Function draws a usual ball. It costs 1 coin.
        """
        circle(self.screen, self.color, (self.x, self.y), self.r)

    def new_money_ball(self):
        """
        Function draws a specific 'money' ball. It costs 5 coins.
        """
        circle(self.screen, self.color, (self.x, self.y), self.r)
        line(self.screen, color_m_lines, (self.x, self.y - r_m_ball), (self.x, self.y + r_m_ball), 2)
        line(self.screen, color_m_lines, (self.x - r_m_ball, self.y), (self.x + r_m_ball, self.y), 2)

while not finished:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True
        elif event.type == pygame.MOUSEBUTTONDOWN:
            (x_mouse, y_mouse) = event.pos  # coordinates of the mouse

    # movement of usual balls
    for ball in balls:
        ball.x += ball.dx
        ball.y += ball.dy
        # conditions of reflection from the walls
        if (ball.x + ball.r > 600) or (ball.x - ball.r < 0):
            ball.dx *= -1
        if (ball.y + ball.r > 450) or (ball.y - ball.r < 0):
            ball.dy *= -1
        ball.new_ball()
        print (ball.x, ball.y)

    if timer % 20 == 0:
        x = randint(100, 500)
        y = randint(100, 350)
        r = randint(10, 100)
        dx = randint(-5, 5)
        dy = randint(-5, 5)
        lifetime = 100
        click = False
        color = (randint(0, 255), randint(0, 255), randint(0, 255))
        ball = Ball(x, y, r, color, dx, dy, lifetime, click, screen)
        balls.append(ball)
        ball.new_ball()

    timer += 1  # counting time of the game
    pygame.display.update()
    clock.tick(FPS)
    screen.fill((0, 0, 0))  # updating the display

pygame.quit()